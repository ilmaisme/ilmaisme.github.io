/**
* Interaktif Btn
* TODO : styling for homepage
* --
* * for homepage: index.html
* * author: ilmaisme.github.io
* ? style.min.css
* ! important to minify
*/
/**
* * base
*/
.preloader {
  top: 0;
  height: 100%;
  width: 100%;
  z-index: 1001;
  position: fixed;
  display: flex;
  justify-content: center;
  overflow: hidden;
  background: #125efa;
  background: linear-gradient(180deg, #125efa 0%, #0ebfc5 100%); }
  .preloaderWrap {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    position: relative;
    opacity: 1;
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: .7s; }
  .preloaderImg {
    max-width: 32px; }
    @media (min-width: 768px) {
      .preloaderImg {
        max-width: 52px; } }
  .preloaderTxt {
    margin-top: 40px;
    font-family: "Poppins Bold", serif;
    font-size: 16px;
    font-weight: 700;
    line-height: normal;
    color: #FFFFFF; }
  .preloader.disactive .preloaderWrap {
    opacity: 0; }

/* HTML: <div class="loader"></div> */
.spinner {
  --d: 40px;
  position: absolute;
  margin-bottom: 68px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  color: #F5F038;
  box-shadow: calc(1*var(--d)) calc(0*var(--d)) 0 0, calc(0.707*var(--d)) calc(0.707*var(--d)) 0 1px, calc(0*var(--d)) calc(1*var(--d)) 0 2px, calc(-0.707*var(--d)) calc(0.707*var(--d)) 0 3px, calc(-1*var(--d)) calc(0*var(--d)) 0 4px, calc(-0.707*var(--d)) calc(-0.707*var(--d)) 0 5px, calc(0*var(--d)) calc(-1*var(--d)) 0 6px;
  animation: l27 1s infinite steps(8); }
  @media (min-width: 768px) {
    .spinner {
      --d: 50px;
      width: 12px;
      height: 12px; } }

@keyframes l27 {
  100% {
    transform: rotate(1turn); } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
