/**
* web story mobile
* --
* * for page : index*.html
* ? style-web-story-mobile.min.css
* ! important to minify

*/
/**
* * base
*/
/**
* * component
*/
/* s: bisniscom override style */
header .swipe-tabs {
  padding-top: 8px; }

.wrapper__flashnews.bottom {
  top: 103px; }

/* e: bisniscom override style */
.storyIcon {
  position: relative;
  padding: 0;
  border: 0;
  width: 25px;
  height: 25px;
  vertical-align: text-bottom;
  background-color: transparent; }
  .storyIcon svg {
    width: 25px;
    height: 25px; }

.storyPopup {
  margin: auto;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center; }

.storyContent {
  width: 100%;
  position: relative; }
  .storyContent .slick-arrow {
    position: absolute;
    top: 50%;
    visibility: hidden;
    z-index: 1; }
    .storyContent .slick-arrow:before {
      content: '';
      background: url(../images/arrow-right.png);
      width: 30px;
      height: 30px;
      position: absolute;
      visibility: visible;
      transition: .2s ease-out; }
    .storyContent .slick-arrow.disabled:before {
      opacity: .4;
      pointer-events: none; }
  .storyContent .slick-prev {
    left: -15px;
    transform: rotate(180deg);
    top: calc(50% + 10px); }
  .storyContent .slick-next {
    right: 10px; }
  .storyContent .slick-dots {
    left: 50%;
    transform: translateX(-50%); }
    .storyContent .slick-dots li {
      width: 30px;
      height: 3px;
      margin: 5px;
      background: #6F6F6F;
      z-index: 1;
      overflow: hidden;
      border-radius: 20px; }
      @media (max-height: 700px) {
        .storyContent .slick-dots li {
          width: 18px; } }
      .storyContent .slick-dots li.slick-active:after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-bottom: 4px solid #61c3f1; }
      .storyContent .slick-dots li button:before {
        content: none; }
  .storyContent .slick-dotted.slick-slider {
    margin-bottom: 0; }

.storyWrapper {
  display: flex;
  justify-content: center;
  width: 100%; }

.storyImg {
  height: 100vh;
  width: 100vw;
  object-fit: cover;
  object-position: center; }

.storyDots {
  position: absolute;
  width: 100vw;
  height: 3px;
  top: 35px;
  z-index: 1; }

.storyClose {
  position: absolute;
  right: 15px;
  top: 15px;
  width: 20px;
  height: 20px;
  background: transparent;
  border: 0;
  z-index: 1; }
  .storyClose:hover {
    opacity: 1; }
  .storyClose:before, .storyClose:after {
    top: 0;
    position: absolute;
    left: 9px;
    content: ' ';
    height: 20px;
    width: 2px;
    background-color: #FFF; }
  .storyClose:before {
    transform: rotate(45deg); }
  .storyClose:after {
    transform: rotate(-45deg); }

.storyProgress {
  position: absolute;
  width: 100%;
  height: 3px;
  background: #6f6f6f;
  border-radius: 20px;
  bottom: 3px; }

.storyProgress .progress {
  width: 0%;
  height: 3px;
  background: #61c3f1; }

.storyRipple::after {
  opacity: 0;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  content: '';
  height: 100%;
  width: 100%;
  border: 8px solid #FFE4E3;
  border-radius: 100%;
  animation-name: ripple;
  animation-duration: 3s;
  animation-delay: 0s;
  animation-iteration-count: infinite;
  animation-timing-function: cubic-bezier(0.65, 0, 0.34, 1);
  z-index: -1; }

.storyRipple::before {
  opacity: 0;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  content: '';
  height: 100%;
  width: 100%;
  border: 8px solid #FFE4E3;
  border-radius: 100%;
  animation-name: ripple;
  animation-duration: 3s;
  animation-delay: 0.5s;
  animation-iteration-count: infinite;
  animation-timing-function: cubic-bezier(0.65, 0, 0.34, 1);
  z-index: -1; }

@keyframes ripple {
  from {
    opacity: 1;
    transform: scale3d(0.75, 0.75, 1); }
  to {
    opacity: 0;
    transform: scale3d(1.5, 1.5, 1); } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
