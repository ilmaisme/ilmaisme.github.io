// default transition
@mixin base_transition($t) {
  -webkit-transition: $t .2s ease;
  -moz-transition: $t .2s ease;
  -ms-transition: $t .2s ease;
  -o-transition: $t .2s ease;
  transition: $t .2s ease;
}

// border radius
@mixin border_radius($x) {
  -webkit-border-radius: $x;
  -moz-border-radius: $x;
  -ms-border-radius: $x;
  -o-border-radius: $x;
  border-radius: $x;
}

// scale
@mixin base_scale($x) {
  -ms-transform: scale($x);
  /* IE 9 */
  -webkit-transform: scale($x);
  /* Safari */
  transform: scale($x);
}

// font template
@mixin font-pack($family: false, $size: false, $weight: false, $lh: false, $colour: false) {
  @if $family {
    font-family: $family;
  }

  @if $size {
    font-size: $size;
  }

  @if $weight {
    font-weight: $weight;
  }

  @if $lh {
    line-height: $lh;
  }

  @if $colour {
    color: $colour;
  }
}

// rotate
@mixin base_rotate($x) {
  -ms-transform: rotate($x);
  /* IE 9 */
  -webkit-transform: rotate($x);
  /* Safari */
  transform: rotate($x);
}

// reset style ul
@mixin reset_ul {
  margin: 0;
  padding: 0;
}

// 100%
@mixin display_full {
  width: 100%;
  height: 100%;
}

//box-shadow
@mixin box_shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow: inset $top $left $blur $color;
    -moz-box-shadow: inset $top $left $blur $color;
    box-shadow: inset $top $left $blur $color;
  }

  @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

//flex
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// overflow title in news list
@mixin title_overflow($height, $max-height) {
  height: $height;
  max-height: $max-height;
  overflow: hidden;
}

// media
@mixin max-responsive ($media) {
  @media (max-width: $media) {
    @content;
  }
}

@mixin min-responsive ($media) {
  @media (min-width: $media) {
    @content;
  }
}

@mixin max-height ($media) {
  @media (max-height: $media) {
    @content;
  }
}
@mixin min-height ($media) {
  @media (min-height: $media) {
    @content;
  }
}

@mixin range-responsive ($media, $media2) {
  @media (min-width: $media) and (max-width: $media2) {
    @content;
  }
}

// prefix declarations
@mixin prefixed($property, $value) {
  @if $webkit==true {
    -webkit-#{$property}: #{$value};
  }

  @if $moz==true {
    -moz-#{$property}: #{$value};
  }

  @if $ms==true {
    -ms-#{$property}: #{$value};
  }

  @if $o==true {
    -o-#{$property}: #{$value};
  }

  #{$property}: #{$value};
}

// prefix keyframes
@mixin keyframes($name) {
  @if $webkit==true {
    @-webkit-keyframes #{$name} {
      @content;
    }
  }

  @if $moz==true {
    @-moz-keyframes #{$name} {
      @content;
    }
  }

  @if $ms==true {
    @-ms-keyframes #{$name} {
      @content;
    }
  }

  @if $o==true {
    @-o-keyframes #{$name} {
      @content;
    }
  }

  @keyframes #{$name} {
    @content;
  }
}

// animation
@mixin animation($name, $duration, $iteration:false, $fill:false) {
  @if $fill {
    -webkit-animation: $name $duration ease $fill;
    -moz-animation: $name $duration ease $fill;
    -o-animation: $name $duration ease $fill;
    animation: $name $duration ease $fill;
  }

  @if $iteration {
    -webkit-animation: $name $duration $iteration ease $fill;
    -moz-animation: $name $duration $iteration ease $fill;
    -o-animation: $name $duration $iteration ease $fill;
    animation: $name $duration $iteration ease $fill;
  }

  @else {
    -webkit-animation: $name $duration ease;
    -moz-animation: $name $duration ease;
    -o-animation: $name $duration ease;
    animation: $name $duration ease;
  }
}