.icon-search {
  background-image: url("data:image/svg+xml,%3Csvg width='25' height='25' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M17.9688 10.9375a7.03 7.03 0 0 1-2.0589 4.9708 7.03 7.03 0 0 1-9.9415 0 7.03 7.03 0 0 1 0-9.9415 7.0297 7.0297 0 0 1 12.0004 4.9707Zm-1.2812 7.4063a9.3755 9.3755 0 0 1-12.7801-1.2041 9.375 9.375 0 1 1 14.4363-.4522l4.75 4.75a1.1722 1.1722 0 0 1 .0298 1.686 1.1732 1.1732 0 0 1-.8494.3431 1.171 1.171 0 0 1-.8366-.3728l-4.75-4.75Z' fill='%23CD5DB9'/%3E%3C/svg%3E"); }

html {
  margin: 0;
  padding: 0; }

body {
  overflow-x: hidden;
  content: "";
  clear: both; }

.header {
  background: #fff; }
  .headerFixed {
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 2; }
    .headerFixed .buttonSearch .icon-search {
      width: 50px;
      background-position: right;
      background-repeat: no-repeat; }
  .headerContent {
    padding: 10px 18px;
    justify-content: space-between; }
  .headerLogo {
    width: 100%; }
    .headerLogo img {
      max-width: 134px; }
    .headerLogo--stories {
      width: calc(100% - 50px); }

.navList {
  padding-left: 10px;
  padding-right: 10px;
  overflow-x: auto;
  max-width: 100%;
  flex-wrap: nowrap;
  justify-content: flex-start;
  background: #F1F1F1; }

.navItem {
  margin-left: 10px;
  margin-right: 10px;
  min-width: 41px;
  height: 38px;
  flex-shrink: 0;
  flex-basis: auto; }

.navLink {
  padding-top: 10px;
  padding-bottom: 10px;
  display: block;
  font-size: 12px;
  font-weight: 600;
  color: #7C7C7C; }
  .navLink:hover {
    color: #7C7C7C; }
  .navLink.active {
    color: #CD5DB9; }

.buttonSearch .icon-search {
  width: 25px;
  height: 25px;
  display: block; }

.adsPlaceholder:after {
  background-color: #C4C4C4;
  content: "Advertisement";
  position: absolute;
  z-index: -1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  font-size: 11px;
  font-weight: 400;
  color: #E1E1E1;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  justify-content: center;
  align-items: center; }

.adsWrap {
  margin-left: -15px;
  margin-right: -15px;
  min-width: calc(100% + 30px);
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden; }

.adsCenter {
  position: relative;
  overflow: hidden;
  margin-left: auto;
  margin-right: auto; }

.adsTop {
  width: 360px;
  height: 180px; }

.adsSticky {
  width: 360px;
  min-height: 50px; }
  .adsSticky__wrap {
    position: fixed;
    bottom: 0;
    overflow: unset;
    z-index: 1; }
    .adsSticky__wrap.adsPlaceholder:after {
      background-color: rgba(196, 196, 196, 0.8); }

.adsClose {
  position: absolute;
  height: 30px;
  width: 30px;
  right: 22px;
  top: -30px;
  background: #CD5DB9;
  font-size: 30px;
  font-weight: 300;
  line-height: 1;
  color: #fff;
  text-align: center;
  z-index: 99; }

.ol_container {
  top: 0;
  width: 100%;
  position: relative;
  z-index: 0;
  background: #616161;
  height: 510px;
  overflow: hidden; }

.ol_big {
  width: 320px;
  height: 510px;
  left: 0;
  right: 0;
  margin: 0 auto; }

.ol_big_inner {
  position: fixed;
  top: 113px;
  left: 0;
  right: 0;
  margin: 0 auto;
  width: 320px;
  height: 480px; }

.ol_close_ad {
  right: 5px;
  z-index: 99;
  width: 25px;
  height: 25px;
  overflow: hidden;
  position: absolute;
  top: 5px;
  border-radius: 50%;
  cursor: pointer; }

.ol_landing {
  position: absolute;
  margin: 0 auto;
  border: none;
  border: none;
  height: 100%;
  width: 100%;
  right: 0;
  left: 0;
  top: 0; }

.pushdown.pushdown-close .pushdown-banner {
  display: none; }

/* aramula rewrite */
.pushdown-banner {
  position: relative;
  top: 83px; }
  .pushdown-banner .adsPlaceholder:after {
    background: transparent; }

.pushdown-banner ~ .main {
  background-color: #fff;
  position: relative;
  margin-top: 83px;
  padding-top: 1px;
  z-index: 0; }

.ol_close_ad {
  padding: 0;
  color: #fff;
  border: 1px solid #fff;
  line-height: 1;
  font-size: 23px;
  display: flex;
  justify-content: center;
  align-items: center; }

.pushdown-hide .pushdown-banner {
  display: none; }

.headline {
  --height: 239px;
  height: 260px;
  max-width: 100%;
  overflow: hidden; }
  .headlineImg {
    display: block; }
    .headlineImg img {
      width: 100%;
      height: var(--height);
      object-fit: cover;
      object-position: center;
      border-radius: 15px; }
  .headline .slick-slide {
    height: var(--height); }
  .headlineList > .headlineItem:not(:first-child) {
    display: none; }
  .headlineItem {
    position: relative;
    max-height: var(--height);
    overflow: hidden;
    border-radius: 15px; }
    .headlineItem:after {
      content: '';
      top: 0;
      width: 100%;
      height: 100%;
      position: absolute;
      border-radius: 15px;
      background: black;
      background: -moz-linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, black 100%);
      background: -webkit-linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, black 100%);
      background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, black 100%);
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#000000", endColorstr="#000000", GradientType=1); }
  .headlineBox {
    position: absolute;
    bottom: 0;
    width: 100%;
    max-height: 194px;
    padding: 22px 30px;
    z-index: 1; }
  .headlineTitle {
    font-size: 18px;
    font-weight: 600;
    color: #fff; }
    .headlineTitle:hover {
      color: #CD5DB9; }
  .headlineSubtitle {
    text-transform: uppercase;
    font-size: 9px;
    font-weight: 400;
    color: #E1E1E1; }
  .headlineTime {
    position: relative;
    margin-left: 14px;
    font-size: 9px;
    font-weight: 400;
    color: #E1E1E1; }
    .headlineTime::before {
      content: '';
      display: inline-block;
      border-left: 1px solid #E1E1E1;
      width: 1px;
      height: 10px;
      position: absolute;
      top: 1px;
      left: -8px; }
  .headlineDots .slick-dots {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    justify-content: center; }
    .headlineDots .slick-dots li {
      margin-left: 3px;
      margin-right: 3px; }
      .headlineDots .slick-dots li.slick-active button {
        width: 36px;
        border-radius: 3px;
        background: #CD5DB9; }
  .headlineDots button {
    padding: 0;
    width: 9px;
    height: 9px;
    background: #C4C4C4;
    border: 0;
    border-radius: 100%;
    font-size: 0;
    cursor: pointer; }
  .headlineLink {
    display: block;
    height: auto;
    max-height: 118px;
    overflow: hidden; }

.ham {
  position: relative;
  top: -10px;
  left: -12px;
  width: 50px;
  height: 46px;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  transition: transform 400ms;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
  z-index: 1; }
  .hamLine {
    fill: none;
    transition: stroke-dasharray 400ms, stroke-dashoffset 400ms;
    stroke: #000;
    stroke-width: 5.5;
    stroke-linecap: round; }
  .hamRotate {
    transform: rotate(180deg); }
  .ham .top {
    stroke-dasharray: 20 82; }
  .ham .middle {
    stroke-dasharray: 30 111; }
  .ham .bottom {
    stroke-dasharray: 40 161; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
