/**
* Bisniscom
* TODO : styling for kanal
* --
* * for kanal : index.html
* ? style-kanal.min.css
* ! important to minify
*/
/**
* * base
*/
.icoInline {
  display: inline-block; }

.icoArrow {
  position: relative;
  width: 22px;
  height: 22px;
  vertical-align: middle; }
  .icoArrow::after, .icoArrow::before {
    content: "";
    display: block;
    box-sizing: border-box;
    position: absolute;
    right: 3px; }
  .icoArrow::after {
    width: 8px;
    height: 8px;
    border-top: 2px solid;
    border-right: 2px solid;
    transform: rotate(45deg);
    bottom: 7px; }
  .icoArrow::before {
    width: 14px;
    height: 2px;
    bottom: 10px;
    background: currentColor; }
  .icoArrow-left {
    transform: rotate(181deg); }

.icoPremium {
  width: 10px;
  height: 10px;
  margin-left: 4px;
  background-size: cover;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='enable-background:new 0 0 11 10' viewBox='0 0 11 10'%3E%3Cpath d='m5.6.5 1.5 3 3.3.5L8 6.4l.5 3.3-3-1.5-3 1.5.5-3.3L.7 4 4 3.5l1.6-3z'/%3E%3C/svg%3E"); }

.icoPlay {
  position: relative; }
  .icoPlay::before {
    content: "";
    display: block;
    box-sizing: border-box;
    position: absolute;
    width: 0;
    height: 10px;
    border-top: 5px solid transparent;
    border-bottom: 5px solid transparent;
    border-left: 8px solid; }

/**required bootstrap 5.0*/
/**optional bootstrap*/
/**
* * layout
*/
/**grid bootstrap*/
.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px; }

.no-gutters {
  margin-right: 0;
  margin-left: 0; }
  .no-gutters > .col,
  .no-gutters > [class*="col-"] {
    padding-right: 0;
    padding-left: 0; }

.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col,
.col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm,
.col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md,
.col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg,
.col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl,
.col-xl-auto {
  position: relative;
  width: 100%;
  min-height: 1px;
  padding-right: 15px;
  padding-left: 15px; }

.col {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%; }

.col-auto {
  flex: 0 0 auto;
  width: auto;
  max-width: none; }

.col-1 {
  flex: 0 0 10%;
  max-width: 10%; }

.col-2 {
  flex: 0 0 20%;
  max-width: 20%; }

.col-3 {
  flex: 0 0 30%;
  max-width: 30%; }

.col-4 {
  flex: 0 0 40%;
  max-width: 40%; }

.col-5 {
  flex: 0 0 50%;
  max-width: 50%; }

.col-6 {
  flex: 0 0 60%;
  max-width: 60%; }

.col-7 {
  flex: 0 0 70%;
  max-width: 70%; }

.col-8 {
  flex: 0 0 80%;
  max-width: 80%; }

.col-9 {
  flex: 0 0 90%;
  max-width: 90%; }

.col-10 {
  flex: 0 0 100%;
  max-width: 100%; }

.order-first {
  order: -1; }

.order-last {
  order: 11; }

.order-0 {
  order: 0; }

.order-1 {
  order: 1; }

.order-2 {
  order: 2; }

.order-3 {
  order: 3; }

.order-4 {
  order: 4; }

.order-5 {
  order: 5; }

.order-6 {
  order: 6; }

.order-7 {
  order: 7; }

.order-8 {
  order: 8; }

.order-9 {
  order: 9; }

.order-10 {
  order: 10; }

.offset-1 {
  margin-left: 10%; }

.offset-2 {
  margin-left: 20%; }

.offset-3 {
  margin-left: 30%; }

.offset-4 {
  margin-left: 40%; }

.offset-5 {
  margin-left: 50%; }

.offset-6 {
  margin-left: 60%; }

.offset-7 {
  margin-left: 70%; }

.offset-8 {
  margin-left: 80%; }

.offset-9 {
  margin-left: 90%; }

@media (min-width: 576px) {
  .col-sm {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%; }
  .col-sm-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none; }
  .col-sm-1 {
    flex: 0 0 10%;
    max-width: 10%; }
  .col-sm-2 {
    flex: 0 0 20%;
    max-width: 20%; }
  .col-sm-3 {
    flex: 0 0 30%;
    max-width: 30%; }
  .col-sm-4 {
    flex: 0 0 40%;
    max-width: 40%; }
  .col-sm-5 {
    flex: 0 0 50%;
    max-width: 50%; }
  .col-sm-6 {
    flex: 0 0 60%;
    max-width: 60%; }
  .col-sm-7 {
    flex: 0 0 70%;
    max-width: 70%; }
  .col-sm-8 {
    flex: 0 0 80%;
    max-width: 80%; }
  .col-sm-9 {
    flex: 0 0 90%;
    max-width: 90%; }
  .col-sm-10 {
    flex: 0 0 100%;
    max-width: 100%; }
  .order-sm-first {
    order: -1; }
  .order-sm-last {
    order: 11; }
  .order-sm-0 {
    order: 0; }
  .order-sm-1 {
    order: 1; }
  .order-sm-2 {
    order: 2; }
  .order-sm-3 {
    order: 3; }
  .order-sm-4 {
    order: 4; }
  .order-sm-5 {
    order: 5; }
  .order-sm-6 {
    order: 6; }
  .order-sm-7 {
    order: 7; }
  .order-sm-8 {
    order: 8; }
  .order-sm-9 {
    order: 9; }
  .order-sm-10 {
    order: 10; }
  .offset-sm-0 {
    margin-left: 0; }
  .offset-sm-1 {
    margin-left: 10%; }
  .offset-sm-2 {
    margin-left: 20%; }
  .offset-sm-3 {
    margin-left: 30%; }
  .offset-sm-4 {
    margin-left: 40%; }
  .offset-sm-5 {
    margin-left: 50%; }
  .offset-sm-6 {
    margin-left: 60%; }
  .offset-sm-7 {
    margin-left: 70%; }
  .offset-sm-8 {
    margin-left: 80%; }
  .offset-sm-9 {
    margin-left: 90%; } }

@media (min-width: 768px) {
  .col-md {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%; }
  .col-md-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none; }
  .col-md-1 {
    flex: 0 0 10%;
    max-width: 10%; }
  .col-md-2 {
    flex: 0 0 20%;
    max-width: 20%; }
  .col-md-3 {
    flex: 0 0 30%;
    max-width: 30%; }
  .col-md-4 {
    flex: 0 0 40%;
    max-width: 40%; }
  .col-md-5 {
    flex: 0 0 50%;
    max-width: 50%; }
  .col-md-6 {
    flex: 0 0 60%;
    max-width: 60%; }
  .col-md-7 {
    flex: 0 0 70%;
    max-width: 70%; }
  .col-md-8 {
    flex: 0 0 80%;
    max-width: 80%; }
  .col-md-9 {
    flex: 0 0 90%;
    max-width: 90%; }
  .col-md-10 {
    flex: 0 0 100%;
    max-width: 100%; }
  .order-md-first {
    order: -1; }
  .order-md-last {
    order: 11; }
  .order-md-0 {
    order: 0; }
  .order-md-1 {
    order: 1; }
  .order-md-2 {
    order: 2; }
  .order-md-3 {
    order: 3; }
  .order-md-4 {
    order: 4; }
  .order-md-5 {
    order: 5; }
  .order-md-6 {
    order: 6; }
  .order-md-7 {
    order: 7; }
  .order-md-8 {
    order: 8; }
  .order-md-9 {
    order: 9; }
  .order-md-10 {
    order: 10; }
  .offset-md-0 {
    margin-left: 0; }
  .offset-md-1 {
    margin-left: 10%; }
  .offset-md-2 {
    margin-left: 20%; }
  .offset-md-3 {
    margin-left: 30%; }
  .offset-md-4 {
    margin-left: 40%; }
  .offset-md-5 {
    margin-left: 50%; }
  .offset-md-6 {
    margin-left: 60%; }
  .offset-md-7 {
    margin-left: 70%; }
  .offset-md-8 {
    margin-left: 80%; }
  .offset-md-9 {
    margin-left: 90%; } }

@media (min-width: 992px) {
  .col-lg {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%; }
  .col-lg-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none; }
  .col-lg-1 {
    flex: 0 0 10%;
    max-width: 10%; }
  .col-lg-2 {
    flex: 0 0 20%;
    max-width: 20%; }
  .col-lg-3 {
    flex: 0 0 30%;
    max-width: 30%; }
  .col-lg-4 {
    flex: 0 0 40%;
    max-width: 40%; }
  .col-lg-5 {
    flex: 0 0 50%;
    max-width: 50%; }
  .col-lg-6 {
    flex: 0 0 60%;
    max-width: 60%; }
  .col-lg-7 {
    flex: 0 0 70%;
    max-width: 70%; }
  .col-lg-8 {
    flex: 0 0 80%;
    max-width: 80%; }
  .col-lg-9 {
    flex: 0 0 90%;
    max-width: 90%; }
  .col-lg-10 {
    flex: 0 0 100%;
    max-width: 100%; }
  .order-lg-first {
    order: -1; }
  .order-lg-last {
    order: 11; }
  .order-lg-0 {
    order: 0; }
  .order-lg-1 {
    order: 1; }
  .order-lg-2 {
    order: 2; }
  .order-lg-3 {
    order: 3; }
  .order-lg-4 {
    order: 4; }
  .order-lg-5 {
    order: 5; }
  .order-lg-6 {
    order: 6; }
  .order-lg-7 {
    order: 7; }
  .order-lg-8 {
    order: 8; }
  .order-lg-9 {
    order: 9; }
  .order-lg-10 {
    order: 10; }
  .offset-lg-0 {
    margin-left: 0; }
  .offset-lg-1 {
    margin-left: 10%; }
  .offset-lg-2 {
    margin-left: 20%; }
  .offset-lg-3 {
    margin-left: 30%; }
  .offset-lg-4 {
    margin-left: 40%; }
  .offset-lg-5 {
    margin-left: 50%; }
  .offset-lg-6 {
    margin-left: 60%; }
  .offset-lg-7 {
    margin-left: 70%; }
  .offset-lg-8 {
    margin-left: 80%; }
  .offset-lg-9 {
    margin-left: 90%; } }

@media (min-width: 1230px) {
  .col-xl {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%; }
  .col-xl-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none; }
  .col-xl-1 {
    flex: 0 0 10%;
    max-width: 10%; }
  .col-xl-2 {
    flex: 0 0 20%;
    max-width: 20%; }
  .col-xl-3 {
    flex: 0 0 30%;
    max-width: 30%; }
  .col-xl-4 {
    flex: 0 0 40%;
    max-width: 40%; }
  .col-xl-5 {
    flex: 0 0 50%;
    max-width: 50%; }
  .col-xl-6 {
    flex: 0 0 60%;
    max-width: 60%; }
  .col-xl-7 {
    flex: 0 0 70%;
    max-width: 70%; }
  .col-xl-8 {
    flex: 0 0 80%;
    max-width: 80%; }
  .col-xl-9 {
    flex: 0 0 90%;
    max-width: 90%; }
  .col-xl-10 {
    flex: 0 0 100%;
    max-width: 100%; }
  .order-xl-first {
    order: -1; }
  .order-xl-last {
    order: 11; }
  .order-xl-0 {
    order: 0; }
  .order-xl-1 {
    order: 1; }
  .order-xl-2 {
    order: 2; }
  .order-xl-3 {
    order: 3; }
  .order-xl-4 {
    order: 4; }
  .order-xl-5 {
    order: 5; }
  .order-xl-6 {
    order: 6; }
  .order-xl-7 {
    order: 7; }
  .order-xl-8 {
    order: 8; }
  .order-xl-9 {
    order: 9; }
  .order-xl-10 {
    order: 10; }
  .offset-xl-0 {
    margin-left: 0; }
  .offset-xl-1 {
    margin-left: 10%; }
  .offset-xl-2 {
    margin-left: 20%; }
  .offset-xl-3 {
    margin-left: 30%; }
  .offset-xl-4 {
    margin-left: 40%; }
  .offset-xl-5 {
    margin-left: 50%; }
  .offset-xl-6 {
    margin-left: 60%; }
  .offset-xl-7 {
    margin-left: 70%; }
  .offset-xl-8 {
    margin-left: 80%; }
  .offset-xl-9 {
    margin-left: 90%; } }

.container {
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
  width: 1110px; }

.col-left {
  padding-left: 22px; }

.col-right {
  padding-right: 18px; }

*,
:after,
:before {
  box-sizing: border-box; }

body,
html {
  margin: 0;
  padding: 0; }

body {
  background: #FFFFFF;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeSpeed; }

a {
  color: inherit;
  vertical-align: baseline;
  outline: 0;
  background-color: transparent; }

a,
a:hover {
  text-decoration: none; }

a:focus,
button:focus {
  outline: 0;
  outline: 0 auto -webkit-focus-ring-color;
  outline-offset: 0; }

h1,
h2,
h3,
h4 {
  margin: 0; }

p {
  margin-block-start: 16px;
  margin-block-end: 16px; }

img {
  max-width: 100%;
  width: auto;
  height: auto;
  vertical-align: top;
  -ms-interpolation-mode: bicubic;
  border-style: none; }

iframe {
  border: none; }

iframe,
video {
  max-width: 100%;
  vertical-align: top; }

ol,
ul {
  margin: 0;
  padding: 0;
  list-style: none; }

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

.button {
  border: 0;
  background: transparent;
  cursor: pointer; }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

.clearfix {
  *zoom: 1; }

.hL .artChannel .icoPremium {
  filter: invert(100%) sepia(100%) saturate(0%) hue-rotate(0deg) brightness(103%) contrast(103%); }

.artWrap.-col .artImg img, .artWrap.-col-left .artImg img, .artWrap.-col-center .artImg img, .hLNavImg img, .streamVid iframe,
.streamVid img, .latestImg img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 1; }

.display-flex {
  display: flex; }

.center-flex {
  display: flex;
  align-items: center;
  justify-content: center; }

.align-center {
  align-items: center; }

.flex-column {
  flex-direction: column; }

.flex-init {
  flex: 1; }

.mx-auto {
  margin: auto; }

.hidden {
  opacity: 0;
  height: 0;
  visibility: hidden;
  pointer-events: none; }

.visible {
  opacity: 1;
  height: auto;
  visibility: visible;
  pointer-events: all;
  -webkit-animation: fadeInFromNone 0.5s ease;
  -moz-animation: fadeInFromNone 0.5s ease;
  -o-animation: fadeInFromNone 0.5s ease;
  animation: fadeInFromNone 0.5s ease; }

/**
* * page
*/
.kanalTheme--lifestyle {
  --cl-lifestyle: #A20087; }
  .kanalTheme--lifestyle .kanalOthers {
    color: var(--cl-lifestyle);
    border-color: var(--cl-lifestyle); }
  .kanalTheme--lifestyle .kanalCaptionBox {
    background: var(--cl-lifestyle); }
  .kanalTheme--lifestyle .clKanal {
    color: var(--cl-lifestyle); }
  .kanalTheme--lifestyle .artChannel {
    color: var(--cl-lifestyle); }
  .kanalTheme--lifestyle .artLink:hover .artTitle {
    color: var(--cl-lifestyle); }
  .kanalTheme--lifestyle .hLBig .artChannel {
    color: var(--cl-lifestyle); }
  .kanalTheme--lifestyle .hLNavItem.slick-current .hLNavWrap {
    border-color: var(--cl-lifestyle); }
    .kanalTheme--lifestyle .hLNavItem.slick-current .hLNavWrap.-premium {
      border-color: #FFFFFF; }
  .kanalTheme--lifestyle .topicLink {
    border-color: var(--cl-lifestyle); }
    .kanalTheme--lifestyle .topicLink:hover {
      background: var(--cl-lifestyle); }
  .kanalTheme--lifestyle .topicTitle {
    color: var(--cl-lifestyle); }

.kanalCaption {
  text-transform: uppercase;
  font-family: "Nunito Sans", sans-serif;
  font-size: 24px;
  font-weight: 700;
  line-height: 1.3;
  color: #1A1A1A; }
  .kanalCaptionWrap {
    display: flex;
    align-items: center;
    justify-content: space-between; }
  .kanalCaptionBox {
    padding: 12px 24px;
    border-top-left-radius: 12px;
    border-bottom-right-radius: 12px;
    text-transform: uppercase;
    font-family: "Nunito Sans", sans-serif;
    font-size: 20px;
    font-weight: 700;
    line-height: 1;
    color: #FFFFFF; }

.kanalBox {
  padding-bottom: 20px;
  border: 1px solid #C7C7C7;
  border-radius: 12px; }
  .kanalBox .art {
    padding-top: 20px;
    padding-left: 24px;
    padding-right: 24px; }
  .kanalBox .kanalOthers {
    padding-left: 24px;
    padding-right: 24px; }

.kanalVid {
  background: #1A1A1A;
  padding-top: 34px;
  padding-bottom: 48px; }
  .kanalVid .kanalCaption,
  .kanalVid .kanalOthers,
  .kanalVid .artChannel,
  .kanalVid .artTitle {
    color: #FFFFFF; }
  .kanalVid .art {
    margin-top: 16px; }
  .kanalVid .artWrap.-col {
    gap: 43px; }
    .kanalVid .artWrap.-col .artImg {
      padding-top: calc(3/4 * 100% - 88px); }
  .kanalVid .artDate {
    color: #C7C7C7; }

.kanalOthers {
  font-family: "Nunito Sans", sans-serif;
  font-size: 14px;
  font-weight: 600;
  line-height: 1.3; }
  .kanalOthers .icoArrow {
    margin-left: 5px; }

/**
* * component
*/
.skyscrapper--left:after,
.skyscrapper--right:after,
.billboardTop:after,
.billboardRectangle:after,
.billboardBottom:after,
.billboardBig:after,
.billboardLeaderboard:after {
  background-color: #D9D9D9;
  content: "Advertisement";
  position: absolute;
  z-index: -1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  font-family: "Nunito Sans", sans-serif;
  font-size: 14px;
  font-weight: 400;
  line-height: 1.4;
  color: #939393;
  display: flex;
  justify-content: center;
  align-items: center; }

.skyscrapper {
  position: fixed;
  width: 100%;
  top: 0;
  transform: translateY(95px);
  z-index: 1;
  transition: transform .5s ease; }
  .skyscrapperFluid {
    position: absolute;
    width: calc((100% - 1100px)/2);
    display: block;
    top: 0; }
    .skyscrapperFluid img {
      max-width: none; }
    .skyscrapperFluid--left {
      left: 0; }
    .skyscrapperFluid--right {
      right: 0; }
  .skyscrapper--left {
    right: 0;
    position: absolute; }
  .skyscrapper--right {
    left: 0;
    position: absolute; }
  .skyscrapper--left, .skyscrapper--right {
    min-width: 160px;
    min-height: 600px; }

.billboard {
  position: relative;
  margin: auto; }
  .billboardTop {
    width: 970px;
    min-height: 250px; }
    .billboardTop:after {
      content: ''; }
  .billboardSticky {
    position: sticky;
    text-align: center;
    top: 156px; }
  .billboardRectangle {
    width: 300px;
    min-height: 250px; }
  .billboardBottom {
    width: 1100px;
    min-height: 90px;
    background: #D9D9D9; }
    .billboardBottom:after {
      background-color: transparent; }
  .billboardBig {
    width: 300px;
    min-height: 600px; }
  .billboardLeaderboard {
    width: 728px;
    min-height: 90px; }

.artChannel {
  padding-top: 3px;
  padding-bottom: 3px;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  font-family: "Nunito Sans", sans-serif;
  font-size: 11px;
  font-weight: 700;
  line-height: 1.3; }
  .artChannel.-premium {
    color: #E57F09; }
    .artChannel.-premium .icoPremium {
      filter: invert(77%) sepia(49%) saturate(6058%) hue-rotate(355deg) brightness(90%) contrast(99%); }

.artDate {
  margin-top: 2px;
  letter-spacing: 0.05em;
  font-family: "Nunito Sans", sans-serif;
  font-size: 11px;
  font-weight: 600;
  line-height: 1.3;
  color: #797979; }

.artImg {
  background: #C4C4C4;
  border-radius: 12px;
  overflow: hidden; }

.artTitle {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
  text-overflow: ellipsis;
  overflow: hidden;
  margin-top: 6px;
  font-family: "Nunito Sans", sans-serif;
  font-size: 18px;
  font-weight: 700;
  line-height: 1.3;
  color: #1A1A1A; }

.art--row {
  display: flex;
  flex-direction: row;
  gap: 16px; }
  .art--row .artContent {
    flex: 1; }

.art--col {
  display: flex;
  flex-direction: column;
  gap: 13px; }
  .art--col-left {
    display: flex;
    flex-direction: row;
    gap: 16px; }
    .art--col-left .artContent {
      flex: 1; }
  .art--col-center {
    display: flex;
    flex-direction: column;
    gap: 16px; }

.artWrap.-col {
  display: flex;
  flex-direction: row;
  gap: 20px; }
  .artWrap.-col .artItem {
    flex: 1; }
  .artWrap.-col .artImg {
    position: relative;
    width: 100%;
    padding-top: calc(3/4 * 100%); }
  .artWrap.-col-left::after {
    content: "";
    display: table;
    clear: both; }
  .artWrap.-col-left .artItem {
    margin-top: 16px; }
    .artWrap.-col-left .artItem:first-child {
      float: left;
      width: 310px;
      min-height: 512px;
      margin-top: 0;
      margin-right: 24px; }
      .artWrap.-col-left .artItem:first-child .art--col-left {
        flex-direction: column; }
      .artWrap.-col-left .artItem:first-child .artImg {
        flex-basis: 100%;
        padding-top: calc(4/3 * 100%); }
      .artWrap.-col-left .artItem:first-child .artTitle {
        font-size: 24px;
        line-height: 1.2; }
      .artWrap.-col-left .artItem:first-child .artDate {
        margin-top: 8px; }
  .artWrap.-col-left .artImg {
    position: relative;
    flex-basis: 155px;
    height: 116px; }
  .artWrap.-col-center {
    display: grid;
    grid-template-columns: 1fr 410px 1fr;
    grid-template-rows: repeat(2, 1fr);
    grid-column-gap: 35px;
    grid-row-gap: 16px;
    margin-top: 16px; }
    .artWrap.-col-center .artItem:nth-child(1) {
      grid-area: 1 / 1 / 2 / 2; }
    .artWrap.-col-center .artItem:nth-child(2) {
      grid-area: 2 / 1 / 3 / 2; }
    .artWrap.-col-center .artItem:nth-child(3) {
      grid-area: 1 / 2 / 3 / 3; }
      .artWrap.-col-center .artItem:nth-child(3) .artImg {
        flex-basis: 100%;
        padding-top: calc(4/3 * 100%); }
    .artWrap.-col-center .artItem:nth-child(4) {
      grid-area: 1 / 3 / 2 / 4; }
    .artWrap.-col-center .artItem:nth-child(5) {
      grid-area: 2 / 3 / 3 / 4; }
    .artWrap.-col-center .artImg {
      position: relative;
      width: 100%;
      padding-top: calc(3/4 * 100%); }
    .artWrap.-col-center .artTitle {
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 2;
      text-overflow: ellipsis;
      overflow: hidden; }

.artDuration {
  position: relative;
  display: inline-flex;
  padding: 5px;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  font-family: "Nunito Sans", sans-serif;
  font-size: 12px;
  font-weight: 400;
  line-height: 1.3;
  color: #FFFFFF;
  z-index: 1; }
  .artDuration .icoPlay {
    top: 2px;
    margin-left: 6px;
    margin-right: 16px; }

.hLWrap {
  position: relative;
  height: 610px;
  overflow: hidden;
  background: #C4C4C4;
  font-family: "Nunito Sans", sans-serif;
  font-size: 15px;
  font-weight: 400;
  line-height: 1.3;
  color: #FFFFFF; }

.hLBig {
  position: relative;
  width: 100%;
  z-index: 0; }
  .hLBigItem {
    position: relative;
    width: 100%; }
    .hLBigItem::before {
      content: '';
      display: block;
      width: 100%;
      height: 100%;
      position: absolute;
      background: linear-gradient(90deg, rgba(0, 0, 0, 0) 50%, #000000 100%), linear-gradient(180deg, rgba(0, 0, 0, 0) 7.72%, #000000 100%);
      z-index: 0; }
  .hLBigContent {
    width: calc(100% - 310px - 54px);
    padding-left: 54px;
    padding-right: 45px;
    position: absolute;
    bottom: 56px;
    z-index: 1; }
    .hLBigContent.-premium .artChannel {
      color: #FFFFFF; }
  .hLBigImg img {
    width: 100%;
    height: 610px;
    object-fit: cover; }
  .hLBigTitle {
    margin-top: 8px;
    font-family: "Nunito Sans", sans-serif;
    font-size: 30px;
    font-weight: 700;
    line-height: 1.2;
    color: #FFFFFF; }
  .hLBigLead {
    margin-top: 8px;
    font-family: "Nunito Sans", sans-serif;
    font-size: 15px;
    font-weight: 400;
    line-height: 1.3;
    color: #FAFAFA; }
  .hLBig .artDate {
    margin-top: 8px; }

.hLNav {
  position: absolute;
  width: 310px;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  top: 0;
  right: 54px;
  z-index: 1; }
  .hLNavWrap {
    display: flex;
    flex-direction: row;
    margin-top: 18px;
    margin-bottom: 18px;
    border-right: 3px solid transparent; }
  .hLNavContent {
    flex: 1;
    padding-left: 12px; }
  .hLNavImg {
    position: relative;
    flex-basis: 98px;
    height: 98px;
    background: #D9D9D9; }
  .hLNavTitle {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    text-overflow: ellipsis;
    overflow: hidden;
    margin-top: 8px;
    font-family: "Nunito Sans", sans-serif;
    font-size: 14px;
    font-weight: 700;
    line-height: 1.3;
    color: #FFFFFF; }
  .hLNav .artDate {
    margin-top: 2px; }

.hL .artChannel {
  color: #FFFFFF; }

.hL .artDate {
  color: #C7C7C7; }

.stream {
  position: relative; }
  .stream.-center .streamWrap {
    padding: 52px 28px; }
  .stream.-center .streamVid {
    margin-top: 12px;
    width: 460px;
    height: 260px;
    background: #D9D9D9; }
  .stream.-center .streamCaption {
    font-family: "Nunito Sans", sans-serif;
    font-size: 20px;
    font-weight: 400;
    line-height: 1.3;
    color: #222222; }
  .stream.-left {
    border-radius: 12px;
    overflow: hidden; }
    .stream.-left .streamWrap {
      padding: 25px 26px; }
    .stream.-left .streamVid {
      width: 415px;
      height: 233px;
      background: #C4C4C4; }
    .stream.-left .streamCaption {
      font-family: "Nunito Sans", sans-serif;
      font-size: 12px;
      font-weight: 400;
      line-height: 1.3;
      color: #FFFFFF; }
    .stream.-left .streamIcon {
      width: 18px;
      height: 18px; }
  .streamCaption strong {
    text-transform: uppercase; }
  .streamIcon {
    margin-right: 2px;
    display: inline-block; }
  .streamWrap {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between; }
  .streamVid {
    position: relative; }
  .streamBg {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top;
    z-index: 0; }
  .streamContent {
    flex: 1;
    margin-left: 14px;
    font-family: "Nunito Sans", sans-serif;
    font-size: 18px;
    font-weight: 700;
    line-height: 1.3;
    color: #FFFFFF; }
  .streamTitle {
    margin-top: 10px; }
  .streamBreaking {
    margin-top: 16px;
    text-transform: uppercase; }
    .streamBreaking span {
      margin-left: 10px;
      padding: 2px 5px;
      background: #FF3838;
      border-radius: 8px; }
  .streamLink {
    display: block;
    margin-top: 14px;
    padding-top: 5px;
    padding-bottom: 5px;
    font-family: "Nunito Sans", sans-serif;
    font-size: 11px;
    font-weight: 600;
    line-height: 1.2;
    color: #FFF800; }
    .streamLink .icoPlay {
      width: 10px;
      height: 10px;
      margin-right: 5px;
      border-color: #FFF800;
      vertical-align: middle; }

.topicList {
  display: flex;
  flex-wrap: wrap;
  gap: 15px;
  margin-top: 16px; }

.topicLink {
  display: block;
  padding: 3px 12px;
  border: 1px solid;
  border-radius: 12px;
  background: transparent; }
  .topicLink:hover .topicTitle {
    color: #FFFFFF; }

.topicTitle {
  font-family: "Nunito Sans", sans-serif;
  font-size: 16px;
  font-weight: 700;
  line-height: 2; }

.latestWrap.-top .latestItem:first-child {
  margin-top: 16px; }
  .latestWrap.-top .latestItem:first-child .latestImg {
    flex-basis: 369px;
    height: 277px; }
  .latestWrap.-top .latestItem:first-child .latestTitle {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 4;
    text-overflow: ellipsis;
    overflow: hidden;
    font-size: 30px;
    line-height: 1.2; }
  .latestWrap.-top .latestItem:first-child .latestDate {
    margin-top: 8px; }

.latestItem {
  margin-top: 20px; }

.latestImg {
  position: relative;
  flex-basis: 190px;
  height: 142px; }

/**
* * plugin
*/
/* Slider */
/**
* Slick slider
* TODO : plugin styling for slick
* --
* * https://kenwheeler.github.io/slick/
* ? slick.min.css
* ! important to minify
*/
/**
* * base
*/
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
  margin-left: auto;
  margin-right: auto; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

/* Arrows */
.slick-prev,
.slick-next {
  font-size: 0;
  line-height: 0;
  position: absolute;
  display: block;
  width: 40px;
  height: 40px;
  padding: 0;
  -webkit-transform: scale(0.8) translate(0, -50%);
  -ms-transform: scale(0.8) translate(0, -50%);
  transform: scale(0.8) translate(0, -50%);
  cursor: pointer;
  color: transparent;
  border: none;
  outline: none;
  background: #EC9F38;
  border-radius: 50%;
  z-index: 1;
  box-shadow: none;
  transition: opacity 1s ease; }
  @media (min-width: 960px) {
    .slick-prev,
    .slick-next {
      -webkit-transform: translate(0, -50%);
      -ms-transform: translate(0, -50%);
      transform: translate(0, -50%); } }
  .slick-prev:hover:before, .slick-prev:focus:before,
  .slick-next:hover:before,
  .slick-next:focus:before {
    opacity: 1; }
  .slick-prev.slick-disabled,
  .slick-next.slick-disabled {
    opacity: 0; }
  .slick-prev:before,
  .slick-next:before {
    opacity: .8;
    color: #000000; }

.slick-prev {
  left: 8px;
  top: calc(50%); }
  @media (min-width: 768px) {
    .slick-prev {
      left: 4px; } }
  [dir='rtl'] .slick-prev {
    right: 0;
    left: auto; }
  .slick-prev:before {
    content: "";
    display: inline-block;
    position: relative;
    border-bottom: 2px solid #FFFFFF;
    border-left: 2px solid #FFFFFF;
    transform: rotate(45deg);
    left: 3px;
    top: 1px;
    width: 14px;
    height: 14px;
    stroke-width: 0;
    stroke: currentColor;
    fill: currentColor;
    transition: .2s ease-out; }
    [dir='rtl'] .slick-prev:before {
      content: "";
      display: inline-block;
      position: relative;
      border-bottom: 2px solid #FFFFFF;
      border-left: 2px solid #FFFFFF;
      transform: rotate(45deg);
      left: 3px;
      top: 1px;
      width: 14px;
      height: 14px;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
      transition: .2s ease-out; }

.slick-next {
  top: 50%;
  right: 8px; }
  @media (min-width: 768px) {
    .slick-next {
      right: 4px; } }
  [dir='rtl'] .slick-next {
    right: auto;
    left: 0; }
  .slick-next:before {
    content: "";
    display: inline-block;
    position: relative;
    border-bottom: 2px solid #FFFFFF;
    border-right: 2px solid #FFFFFF;
    transform: rotate(-45deg);
    right: 3px;
    top: 1px;
    width: 14px;
    height: 14px;
    stroke-width: 0;
    stroke: currentColor;
    fill: currentColor;
    transition: .2s ease-out; }
    [dir='rtl'] .slick-next:before {
      content: "";
      display: inline-block;
      position: relative;
      border-bottom: 2px solid #FFFFFF;
      border-right: 2px solid #FFFFFF;
      transform: rotate(-45deg);
      right: 3px;
      top: 1px;
      width: 14px;
      height: 14px;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
      transition: .2s ease-out; }

.slick-dots {
  display: flex; }
  .slick-dots button {
    margin-left: 5px;
    margin-right: 5px;
    width: 12px;
    height: 12px;
    background: #DADADA;
    border: 0;
    padding: 0;
    font-size: 0;
    border-radius: 50%;
    cursor: pointer; }
  .slick-dots .slick-active button {
    background: #E67A13; }

/**
* * module
*/
.mt50 {
  margin-top: 50px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
