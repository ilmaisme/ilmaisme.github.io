/**
* * plugin
*/
/* Slider */
/**
* Slick slider
* TODO : plugin styling for slick
* --
* * https://kenwheeler.github.io/slick/
* ? slick.min.css
* ! important to minify
*/
/**
* * base
*/
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
  margin-left: auto;
  margin-right: auto; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

/* Arrows */
.slick-prev,
.slick-next {
  font-size: 0;
  line-height: 0;
  position: absolute;
  display: block;
  width: 40px;
  height: 40px;
  padding: 0;
  -webkit-transform: scale(0.8) translate(0, -50%);
  -ms-transform: scale(0.8) translate(0, -50%);
  transform: scale(0.8) translate(0, -50%);
  cursor: pointer;
  color: transparent;
  border: none;
  outline: none;
  background: #EC9F38;
  border-radius: 50%;
  z-index: 1;
  box-shadow: none;
  transition: opacity 1s ease; }
  @media (min-width: 960px) {
    .slick-prev,
    .slick-next {
      -webkit-transform: translate(0, -50%);
      -ms-transform: translate(0, -50%);
      transform: translate(0, -50%); } }
  .slick-prev:hover:before, .slick-prev:focus:before,
  .slick-next:hover:before,
  .slick-next:focus:before {
    opacity: 1; }
  .slick-prev.slick-disabled,
  .slick-next.slick-disabled {
    opacity: 0; }
  .slick-prev:before,
  .slick-next:before {
    opacity: .8;
    color: #000000; }

.slick-prev {
  left: 8px;
  top: calc(50%); }
  @media (min-width: 768px) {
    .slick-prev {
      left: 4px; } }
  [dir='rtl'] .slick-prev {
    right: 0;
    left: auto; }
  .slick-prev:before {
    content: "";
    display: inline-block;
    position: relative;
    border-bottom: 2px solid #FFFFFF;
    border-left: 2px solid #FFFFFF;
    transform: rotate(45deg);
    left: 3px;
    top: 1px;
    width: 14px;
    height: 14px;
    stroke-width: 0;
    stroke: currentColor;
    fill: currentColor;
    transition: .2s ease-out; }
    [dir='rtl'] .slick-prev:before {
      content: "";
      display: inline-block;
      position: relative;
      border-bottom: 2px solid #FFFFFF;
      border-left: 2px solid #FFFFFF;
      transform: rotate(45deg);
      left: 3px;
      top: 1px;
      width: 14px;
      height: 14px;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
      transition: .2s ease-out; }

.slick-next {
  top: 50%;
  right: 8px; }
  @media (min-width: 768px) {
    .slick-next {
      right: 4px; } }
  [dir='rtl'] .slick-next {
    right: auto;
    left: 0; }
  .slick-next:before {
    content: "";
    display: inline-block;
    position: relative;
    border-bottom: 2px solid #FFFFFF;
    border-right: 2px solid #FFFFFF;
    transform: rotate(-45deg);
    right: 3px;
    top: 1px;
    width: 14px;
    height: 14px;
    stroke-width: 0;
    stroke: currentColor;
    fill: currentColor;
    transition: .2s ease-out; }
    [dir='rtl'] .slick-next:before {
      content: "";
      display: inline-block;
      position: relative;
      border-bottom: 2px solid #FFFFFF;
      border-right: 2px solid #FFFFFF;
      transform: rotate(-45deg);
      right: 3px;
      top: 1px;
      width: 14px;
      height: 14px;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
      transition: .2s ease-out; }

.slick-dots {
  display: flex; }
  .slick-dots button {
    margin-left: 5px;
    margin-right: 5px;
    width: 12px;
    height: 12px;
    background: #DADADA;
    border: 0;
    padding: 0;
    font-size: 0;
    border-radius: 50%;
    cursor: pointer; }
  .slick-dots .slick-active button {
    background: #E67A13; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
