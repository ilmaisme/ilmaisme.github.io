/**
* Interaktif BNI coded by Ilma A.
* TODO : styling for inline css
* --
* * for homepage : index.html
* ? style.min.css
* ! important to minify
*/
/**
* * base
*/
/**
* * layout
*/
.headerWrap {
  position: fixed;
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
  z-index: 100;
  display: flex;
  justify-content: space-between;
  pointer-events: none; }

.headerItem {
  padding-top: 10px;
  pointer-events: all; }
  @media (min-width: 768px) {
    .headerItem {
      padding-top: 28px;
      padding-left: 82px; } }
  .headerItem img {
    width: 80px; }
    @media (min-width: 768px) {
      .headerItem img {
        width: 94px; } }

/**
* * content
*/
.preloader {
  top: 0;
  background: #011416;
  background: -moz-linear-gradient(4deg, #011416 0%, #072b30 100%);
  background: -webkit-linear-gradient(4deg, #011416 0%, #072b30 100%);
  background: linear-gradient(4deg, #011416 0%, #072b30 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#011416", endColorstr="#072b30", GradientType=1);
  width: 100%;
  height: 100%;
  z-index: 99;
  position: fixed;
  display: flex;
  justify-content: center;
  overflow: hidden;
  transition: opacity .4s ease-in-out; }
  .preloaderWrap {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    flex-direction: column;
    z-index: 1;
    transition: opacity .4s ease-in-out; }
  .preloaderTxt {
    margin-bottom: 5px;
    font-family: "Prompt", sans-serif;
    font-size: 14px;
    font-weight: 400;
    line-height: 1.5;
    color: #FFFFFF; }
  .preloaderCursor {
    margin-bottom: 10px;
    -moz-animation: down 1.5s infinite;
    -o-animation: down 1.5s infinite;
    -ms-animation: down 1.5s infinite;
    -webkit-animation: down 1.5s infinite;
    animation: down 1.5s infinite; }
    .preloaderCursor__wrap {
      text-align: center; }
  .preloaderVr__btn {
    padding: 0;
    cursor: pointer;
    background: transparent;
    border: 0; }

@keyframes down {
  0% {
    transform: translate(0); }
  20% {
    transform: translateY(15px); }
  40% {
    transform: translate(0); } }

@-webkit-keyframes down {
  0% {
    transform: translate(0); }
  20% {
    transform: translateY(15px); }
  40% {
    transform: translate(0); } }

.preloader--intern {
  background: #2B7097; }
  .preloader--intern .preloaderTxt {
    margin-top: 25px;
    text-transform: uppercase;
    font-family: "Prompt", sans-serif;
    font-size: 14px;
    font-weight: 400;
    line-height: 1.5;
    color: #FFFFFF; }
    @media (min-width: 768px) {
      .preloader--intern .preloaderTxt {
        font-size: 18px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
